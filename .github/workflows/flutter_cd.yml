# A name for the entire workflow
name: Build, Release and Distribute

# This workflow runs on any push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  # A single job that will perform all our steps
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # 1. Checks out your repository's code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. NEW: Set up Java, which is required for Android builds
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. NEW: Use the OFFICIAL Flutter action to set up Flutter
      - name: Set up Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          # Using the same version number we tried before
          version: '3.28.1'

      # 4. Installs your app's dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      # 5. Runs your tests to make sure nothing is broken
      - name: Run tests
        run: flutter test

      # 6. Builds the APK file (for Firebase and direct installs)
      - name: Build APK
        run: flutter build apk --release

      # 7. Builds the App Bundle (for the Play Store and GitHub Release)
      - name: Build AAB
        run: flutter build appbundle --release

      # --- Distribution Steps ---

      # 8. Distribute APK to Firebase Testers
      - name: Distribute to Firebase App Distribution
        run: |
          curl -sL https://firebase.tools | bash
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app "${{ secrets.FIREBASE_APP_ID }}" \
            --token "${{ secrets.FIREBASE_TOKEN }}" \
            --release-notes "New test build. Also available on GitHub Release v${{ github.run_number }}." \
            --testers "youremail@example.com,teammate@example.com"

      # 9. Create a Public GitHub Release
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.run_number }}
          name: "Release v${{ github.run_number }}"
          body: "Automated release. This build was also sent to testers via Firebase."
          artifacts: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          token: ${{ secrets.GITHUB_TOKEN }}
